name: Main rsibot workflow

on:
  workflow_dispatch:

env:
  BACKEND_IMAGE: ${{secrets.DOCKERHUB_USER}}/rsi_bot_backend
  GATEWAY_IMAGE: ${{secrets.DOCKERHUB_USER}}/rsi_bot_gateway

jobs:
  backend_build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker 
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USER}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}
      - name: Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: ./backend/
          push: true
          tags: ${{env.BACKEND_IMAGE}}:latest
  gateway_build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker 
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USER}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}
      - name: Push to DockerHub
        uses: docker/build-push-action@v5
        with:
          context: ./gateway/
          push: true
          tags: ${{env.GATEWAY_IMAGE}}:latest
  deploy:
    runs-on: ubuntu-latest
    needs: 
      - backend_build
      - gateway_build
    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
    - name: Copy files via ssh
      uses: appleboy/scp-action@master
      with:
        host: ${{secrets.VDS_ADDRESS}}
        username: ${{secrets.VDS_USER}}
        password: ${{secrets.VDS_PASSWORD}}
        source: "docker-compose.yml,setup.sh"
        target: "/deploy/rsibot/upload"
        rm: true
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{secrets.VDS_ADDRESS}}
        username: ${{secrets.VDS_USER}}
        password: ${{secrets.VDS_PASSWORD}}
        script: |
          cd /deploy/rsibot
          sudo docker compose down --rmi all
          cp -rf upload/. .
          echo "TELEGRAM_TOKEN=${{secrets.TELEGRAM_TOKEN}}" > .env
          echo "WEBHOOK_URL=${{secrets.TELEGRAM_WEBHOOK_URL}}" >> .env
          echo "WEBHOOK_SECRET=${{secrets.TELEGRAM_WEBHOOK_SECRET}}" >> .env
          echo "WEBHOOK_PORT=${{secrets.TELEGRAM_WEBHOOK_PORT}}" >> .env
          echo "WEBHOOK_PATH=${{secrets.TELEGRAM_WEBHOOK_PATH}}" >> .env
          echo "WEBHOOK_CERT=${{secrets.TELEGRAM_WEBHOOK_CERT}}" >> .env
          sudo bash setup.sh deploy
